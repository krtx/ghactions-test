name: Xcode

on: [push]

jobs:
  build:

    runs-on: macOS-10.14

    steps:
    - uses: actions/checkout@v1
    - name: ruby
      run: sudo gem install jwt
    - name: Set CFBundleVersion
      run: |
        TOKEN=$(echo ${{ secrets.AUTH_KEY_BASE64 }} | base64 --decode | ruby jwt.rb -i 69a6de85-01eb-47e3-e053-5b8c7c11a4d1 -k 6XZA3ZKNY3)

        # get certificate
        curl -v --silent -H "Authorization: Bearer $TOKEN" 'https://api.appstoreconnect.apple.com/v1/certificates?filter\[certificateType\]=IOS_DISTRIBUTION' |
          jq -r .data[0].attributes.certificateContent |
          base64 --decode > $HOME/certificate.p12

        # get provisioning profile
        curl -v --silent -H "Authorization: Bearer $TOKEN" 'https://api.appstoreconnect.apple.com/v1/profiles?filter\[name\]=ios+distribution+gheactions-test' |
          jq -r .data[0].attributes.profileContent |
          base64 --decode > $HOME/distribution.mobileprovision

        # set version
        CURRENT_VERSION=$(curl --silent -H "Authorization: Bearer $TOKEN" 'https://api.appstoreconnect.apple.com/v1/builds?filter\[app\]=1484598434' | jq -r '.data | sort_by(.attributes.uploadedDate) | reverse | map(.attributes) | first .version')
        NEXT_VERSION=$(( CURRENT_VERSION + 1 ))
        echo "next version is $NEXT_VERSION"
        find . -name 'Info.plist' -exec  /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEXT_VERSION" {} \;
    - name: Select Xcode version
      run: sudo xcode-select -s '/Applications/Xcode_10.1.app/Contents/Developer'
    - name: Setup keychain
      run: |
        security create-keychain -p password build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p password build.keychain
    - name: Add certificate
      run: |
        security import $HOME/certificate.p12 -T /usr/bin/codesign -P ""
    - name: Allow apple tools to access keychain
      run: |
        security set-key-partition-list -S apple-tool:,apple: -s -k password build.keychain
    - name: Add Provisioning Profile
      run: |
        mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
        cp $HOME/distribution.mobileprovision "$HOME/Library/MobileDevice/Provisioning Profiles/"
    - name: Archive
      run: xcodebuild -configuration Release -scheme ghactions-test -project ghactions-test.xcodeproj -archivePath ghactions-test.xcarchive archive
    - name: Export
      run: xcodebuild -exportArchive -archivePath ghactions-test.xcarchive -exportPath ghactions-test.ipa -exportOptionsPlist ExportOptions.plist
    - name: Upload
      run: xcrun altool --upload-app -f ghactions-test.ipa/ghactions-test.ipa -t ios -u ${{ secrets.APPLE_USER }} -p ${{ secrets.APPLE_API_KEY }}
